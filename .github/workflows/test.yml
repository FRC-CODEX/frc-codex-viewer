name: Test

on:
  workflow_dispatch:
  pull_request_target:
    branches:
      - "**"

permissions: {}

jobs:
  test:
    runs-on: ubuntu-24.04
    environment: ci
    steps:
      - uses: actions/checkout@v5.0.0
        with:
          persist-credentials: false
          ref: ${{ github.event.pull_request.head.sha }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - uses: actions/setup-python@v6.0.0
        with:
          cache: 'pip'
          check-latest: true
          python-version: 3.13
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install tox tox-gh-actions
      - name: Test with tox
        shell: bash
        run: tox
      - name: "Secrets"
        shell: bash
        run: |
          echo "COMPANIES_HOUSE_REST_API_KEY=${{ secrets.COMPANIES_HOUSE_REST_API_KEY }}" >> ./frc-codex-server.secrets
          echo "COMPANIES_HOUSE_STREAM_API_KEY=${{ secrets.COMPANIES_HOUSE_STREAM_API_KEY }}" >> ./frc-codex-server.secrets
      - name: "Compose"
        timeout-minutes: 5
        shell: bash
        run: |
          ./dev/env-setup.sh
      - name: "Smoke Test"
        shell: bash
        run: ./dev/smoke-test.sh
      - uses: actions/upload-artifact@v4.6.2
        if: always()
        with:
          name: docker-logs
          if-no-files-found: error
          path: ./dev/logs

  puppeteer:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5.0.0
        with:
          persist-credentials: false
          ref: ${{ github.event.pull_request.head.sha }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - uses: actions/setup-python@v6.0.0
        with:
          cache: 'pip'
          check-latest: true
          python-version: 3.13
      - name: Install dependencies
        shell: bash
        run: python -m pip install --upgrade pip setuptools wheel
      - uses: actions/setup-node@v5.0.0
        with:
          cache: 'npm'
          check-latest: true
          node-version: 24
      - name: Install dependencies
        shell: bash
        run: npm ci
      - name: Setup Chromium Sandbox
        shell: bash
        run: |
          cd ~/.cache/puppeteer/chrome/linux-*/chrome-linux64
          sudo chown root:root chrome_sandbox
          sudo chmod 4755 chrome_sandbox
          sudo cp -p chrome_sandbox /usr/local/sbin/chrome-devel-sandbox
          echo "CHROME_DEVEL_SANDBOX=/usr/local/sbin/chrome-devel-sandbox" >> $GITHUB_ENV
      - name: "Create Dummy Secrets File"
        shell: bash
        run: touch ./frc-codex-server.secrets # Seeded DB does not require secrets
      - name: "Compose"
        timeout-minutes: 5
        shell: bash
        run: SEEDED=true ./dev/env-setup.sh
      - name: "Test"
        shell: bash
        run: npm run test
      - uses: actions/upload-artifact@v4.6.2
        if: failure()
        with:
          name: puppeteer-artifacts
          if-no-files-found: error
          path: |
            ./puppeteer/artifacts
            ./dev/logs
